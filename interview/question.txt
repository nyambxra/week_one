In a text file, there is a single character H. Your text editor can execute only two operations in this file: Copy All and Paste. Given a number n, write a method that calculates the fewest number of operations needed to result in exactly n H characters in the file.

Prototype: def minOperations(n)
Returns an integer
If n is impossible to achieve, return 0
Example:

n = 9

H => Copy All => Paste => HH => Paste =>HHH => Copy All => Paste => HHHHHH => Paste => HHHHHHHHH

Number of operations: 6

Notes:
I struggled to understand what exactly the task tests and the application

1. Dynamic Programming:
This problem involves dynamic programming to find an optimal solution by breaking it down into smaller subproblems.

2. Factorization:
It involves checking for factors of n, as these factors represent potential intermediate states in the process.

3. Optimization:
The goal is to find the optimal sequence of operations to achieve the desired state with the fewest number of steps.

4. Problem-Solving Skills:
The problem requires you to think critically about the problem statement, devise a strategy, and implement a solution.

5. Algorithmic Thinking:
You need to devise an algorithm to efficiently find the minimum number of operations, considering the factors and the Copy All and Paste operations.

6. Edge Cases Handling:
You need to consider edge cases, such as when n is less than or equal to 1.

Why it's significant:

1. Real-world Analogy:
This problem mirrors scenarios in computing where you need to optimize a process or find the most efficient way to achieve a certain state.

2. Algorithmic Efficiency:
It highlights the importance of designing algorithms that are efficient and scalable, especially when dealing with repetitive operations.

3. Dynamic Programming Concepts:
It reinforces the concept of dynamic programming, where solutions to subproblems are stored and reused to avoid redundant computations.

4. Applicability:
Similar principles can be applied in various areas, such as optimization problems, resource allocation, and task scheduling.
